class e{constructor(){this.events=void 0,this.events={}}emit(e,s){return this.events[e]&&this.events[e].forEach(e=>e(s)),this}on(e,s){return this.events[e]?this.events[e].push(s):this.events[e]=[s],this}off(e,s){if(e&&"function"==typeof s){const t=this.events[e],i=t.findIndex(e=>e===s);t.splice(i,1)}else this.events[e]=[];return this}}var s,t;!function(e){e.INITSDK="InitSDK",e.LOGIN="Login",e.LOGOUT="Logout",e.GETLOGINSTATUS="GetLoginStatus",e.GETLOGINUSER="GetLoginUser",e.GETSELFUSERINFO="GetSelfUserInfo",e.CREATETEXTMESSAGE="CreateTextMessage",e.CREATETEXTATMESSAGE="CreateTextAtMessage",e.CREATEIMAGEMESSAGEFROMBYURL="CreateImageMessageByURL",e.CREATESOUNDMESSAGEBYURL="CreateSoundMessageByURL",e.CREATEVIDEOMESSAGEBYURL="CreateVideoMessageByURL",e.CREATEFILEMESSAGEBYURL="CreateFileMessageByURL",e.CREATELOCATIONMESSAGE="CreateLocationMessage",e.CREATECUSTOMMESSAGE="CreateCustomMessage",e.CREATEMERGERMESSAGE="CreateMergerMessage",e.CREATEFORWARDMESSAGE="CreateForwardMessage",e.CREATEQUOTEMESSAGE="CreateQuoteMessage",e.CREATECARDMESSAGE="CreateCardMessage",e.SENDMESSAGE="SendMessage",e.SENDMESSAGENOTOSS="SendMessageNotOss",e.GETHISTORYMESSAGELIST="GetHistoryMessageList",e.REVOKEMESSAGE="RevokeMessage",e.DELETEMESSAGEFROMLOCALSTORAGE="DeleteMessageFromLocalStorage",e.MARKSINGLEMESSAGEHASREAD="MarkSingleMessageHasRead",e.INSERTSINGLEMESSAGETOLOCALSTORAGE="InsertSingleMessageToLocalStorage",e.INSERTGROUPMESSAGETOLOCALSTORAGE="InsertGroupMessageToLocalStorage",e.TYPINGSTATUSUPDATE="TypingStatusUpdate",e.MARKC2CMESSAGEASREAD="MarkC2CMessageAsRead",e.CLEARC2CHISTORYMESSAGE="ClearC2CHistoryMessage",e.CLEARGROUPHISTORYMESSAGE="ClearGroupHistoryMessage",e.ADDFRIEND="AddFriend",e.GETDESIGNATEDFRIENDSINFO="GetDesignatedFriendsInfo",e.GETRECVFRIENDAPPLICATIONLIST="GetRecvFriendApplicationList",e.GETSENDFRIENDAPPLICATIONLIST="GetSendFriendApplicationList",e.GETFRIENDLIST="GetFriendList",e.SETFRIENDREMARK="SetFriendRemark",e.ADDBLACK="AddBlack",e.GETBLACKLIST="GetBlackList",e.REMOVEBLACK="RemoveBlack",e.CHECKFRIEND="CheckFriend",e.ACCEPTFRIENDAPPLICATION="AcceptFriendApplication",e.REFUSEFRIENDAPPLICATION="RefuseFriendApplication",e.DELETEFRIEND="DeleteFriend",e.GETUSERSINFO="GetUsersInfo",e.SETSELFINFO="SetSelfInfo",e.GETALLCONVERSATIONLIST="GetAllConversationList",e.GETCONVERSATIONLISTSPLIT="GetConversationListSplit",e.GETONECONVERSATION="GetOneConversation",e.GETCONVERSATIONIDBYSESSIONTYPE="GetConversationIDBySessionType",e.GETMULTIPLECONVERSATION="GetMultipleConversation",e.DELETECONVERSATION="DeleteConversation",e.SETCONVERSATIONDRAFT="SetConversationDraft",e.PINCONVERSATION="PinConversation",e.GETTOTALUNREADMSGCOUNT="GetTotalUnreadMsgCount",e.GETCONVERSATIONRECVMESSAGEOPT="GetConversationRecvMessageOpt",e.SETCONVERSATIONRECVMESSAGEOPT="SetConversationRecvMessageOpt",e.SEARCHLOCALMESSAGES="SearchLocalMessages",e.MARKGROUPMESSAGEHASREAD="MarkGroupMessageHasRead",e.INVITEUSERTOGROUP="InviteUserToGroup",e.KICKGROUPMEMBER="KickGroupMember",e.GETGROUPMEMBERSINFO="GetGroupMembersInfo",e.GETGROUPMEMBERLIST="GetGroupMemberList",e.GETJOINEDGROUPLIST="GetJoinedGroupList",e.CREATEGROUP="CreateGroup",e.SETGROUPINFO="SetGroupInfo",e.GETGROUPSINFO="GetGroupsInfo",e.JOINGROUP="JoinGroup",e.QUITGROUP="QuitGroup",e.TRANSFERGROUPOWNER="TransferGroupOwner",e.GETSENDGROUPAPPLICATIONLIST="GetSendGroupApplicationList",e.GETRECVGROUPAPPLICATIONLIST="GetRecvGroupApplicationList",e.ACCEPTGROUPAPPLICATION="AcceptGroupApplication",e.REFUSEGROUPAPPLICATION="RefuseGroupApplication"}(s||(s={})),function(e){e.ONCONNECTFAILED="OnConnectFailed",e.ONCONNECTSUCCESS="OnConnectSuccess",e.ONCONNECTING="OnConnecting",e.ONKICKEDOFFLINE="OnKickedOffline",e.ONSELFINFOUPDATED="OnSelfInfoUpdated",e.ONUSERTOKENEXPIRED="OnUserTokenExpired",e.SENDMSGPROGRESS="OnProgress",e.ONRECVNEWMESSAGE="OnRecvNewMessage",e.ONRECVMESSAGEREVOKED="OnRecvMessageRevoked",e.ONRECVC2CREADRECEIPT="OnRecvC2CReadReceipt",e.ONCONVERSATIONCHANGED="OnConversationChanged",e.ONNEWCONVERSATION="OnNewConversation",e.ONSYNCSERVERFAILED="OnSyncServerFailed",e.ONSYNCSERVERFINISH="OnSyncServerFinish",e.ONSYNCSERVERSTART="OnSyncServerStart",e.ONTOTALUNREADMESSAGECOUNTCHANGED="OnTotalUnreadMessageCountChanged",e.ONBLACKADDED="OnBlackAdded",e.ONBLACKDELETED="OnBlackDeleted",e.ONFRIENDAPPLICATIONACCEPTED="OnFriendApplicationAccepted",e.ONFRIENDAPPLICATIONADDED="OnFriendApplicationAdded",e.ONRECEIVEFRIENDAPPLICATIONADDED="OnReceiveFriendApplicationAdded",e.ONRECEIVEFRIENDAPPLICATIONDELETED="OnReceiveFriendApplicationDeleted",e.ONFRIENDAPPLICATIONDELETED="OnFriendApplicationDeleted",e.ONFRIENDAPPLICATIONREJECTED="OnFriendApplicationRejected",e.ONFRIENDINFOCHANGED="OnFriendInfoChanged",e.ONFRIENDADDED="OnFriendAdded",e.ONFRIENDDELETED="OnFriendDeleted",e.ONJOINEDGROUPADDED="OnJoinedGroupAdded",e.ONJOINEDGROUPDELETED="OnJoinedGroupDeleted",e.ONGROUPMEMBERADDED="OnGroupMemberAdded",e.ONGROUPMEMBERDELETED="OnGroupMemberDeleted",e.ONRECEIVEJOINGROUPAPPLICATIONADDED="OnReceiveJoinGroupApplicationAdded",e.ONRECEIVEJOINGROUPAPPLICATIONDELETED="OnReceiveJoinGroupApplicationDeleted",e.ONGROUPAPPLICATIONADDED="OnGroupApplicationAdded",e.ONGROUPAPPLICATIONDELETED="OnGroupApplicationDeleted",e.ONGROUPINFOCHANGED="OnGroupInfoChanged",e.ONGROUPMEMBERINFOCHANGED="OnGroupMemberInfoChanged",e.ONGROUPAPPLICATIONACCEPTED="OnGroupApplicationAccepted",e.ONGROUPAPPLICATIONREJECTED="OnGroupApplicationRejected"}(t||(t={}));const i=e=>(36*Math.random()).toString(36).slice(2)+(new Date).getTime().toString()+e;class n extends e{constructor(){super(),this.ws=void 0,this.uid=void 0,this.token=void 0,this.platform="web",this.wsUrl="",this.lock=!1,this.logoutFlag=!1,this.timer=void 0,this.ws2promise={},this.onceFlag=!0,this.getLoginStatus=e=>new Promise((t,n)=>{const o=e||i(this.uid);this.wsSend({reqFuncName:s.GETLOGINSTATUS,operationID:o,userID:this.uid,data:""},t,n)}),this.getLoginUser=e=>new Promise((t,n)=>{const o=e||i(this.uid);this.wsSend({reqFuncName:s.GETLOGINUSER,operationID:o,userID:this.uid,data:""},t,n)}),this.getSelfUserInfo=e=>new Promise((t,n)=>{const o=e||i(this.uid);this.wsSend({reqFuncName:s.GETSELFUSERINFO,operationID:o,userID:this.uid,data:""},t,n)}),this.getUsersInfo=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.GETUSERSINFO,operationID:r,userID:this.uid,data:e},n,o)}),this.setSelfInfo=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.SETSELFINFO,operationID:r,userID:this.uid,data:e},n,o)}),this.createTextMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.CREATETEXTMESSAGE,operationID:r,userID:this.uid,data:e},n,o)}),this.createTextAtMessage=(e,t)=>new Promise((n,o)=>{const r=e;r.atUserIDList=JSON.stringify(r.atUserIDList);const a=t||i(this.uid);this.wsSend({reqFuncName:s.CREATETEXTATMESSAGE,operationID:a,userID:this.uid,data:r},n,o)}),this.createImageMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);let a=e;a.bigPicture=JSON.stringify(a.bigPicture),a.snapshotPicture=JSON.stringify(a.snapshotPicture),a.sourcePicture=JSON.stringify(a.sourcePicture);const E={reqFuncName:s.CREATEIMAGEMESSAGEFROMBYURL,operationID:r,userID:this.uid,data:JSON.stringify(a)};this.wsSend(E,n,o)}),this.createSoundMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);let a={soundBaseInfo:JSON.stringify(e)};const E={reqFuncName:s.CREATESOUNDMESSAGEBYURL,operationID:r,userID:this.uid,data:JSON.stringify(a)};this.wsSend(E,n,o)}),this.createVideoMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);let a={videoBaseInfo:JSON.stringify(e)};const E={reqFuncName:s.CREATEVIDEOMESSAGEBYURL,operationID:r,userID:this.uid,data:JSON.stringify(a)};this.wsSend(E,n,o)}),this.createFileMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);let a={fileBaseInfo:JSON.stringify(e)};const E={reqFuncName:s.CREATEFILEMESSAGEBYURL,operationID:r,userID:this.uid,data:JSON.stringify(a)};this.wsSend(E,n,o)}),this.createMergerMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);let a=e;a.messageList=JSON.stringify(e.messageList),a.summaryList=JSON.stringify(e.summaryList),this.wsSend({reqFuncName:s.CREATEMERGERMESSAGE,operationID:r,userID:this.uid,data:a},n,o)}),this.createForwardMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.CREATEFORWARDMESSAGE,operationID:r,userID:this.uid,data:e},n,o)}),this.createLocationMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.CREATELOCATIONMESSAGE,operationID:r,userID:this.uid,data:e},n,o)}),this.createCustomMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.CREATECUSTOMMESSAGE,operationID:r,userID:this.uid,data:e},n,o)}),this.createQuoteMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.CREATEQUOTEMESSAGE,operationID:r,userID:this.uid,data:e},n,o)}),this.createCardMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.CREATECARDMESSAGE,operationID:r,userID:this.uid,data:e},n,o)}),this.sendMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid),a=e;a.offlinePushInfo=a.offlinePushInfo?JSON.stringify(e.offlinePushInfo):"",this.wsSend({reqFuncName:s.SENDMESSAGE,operationID:r,userID:this.uid,data:a},n,o)}),this.sendMessageNotOss=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid),a=e;a.offlinePushInfo=a.offlinePushInfo?JSON.stringify(e.offlinePushInfo):"",this.wsSend({reqFuncName:s.SENDMESSAGENOTOSS,operationID:r,userID:this.uid,data:a},n,o)}),this.getHistoryMessageList=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.GETHISTORYMESSAGELIST,operationID:r,userID:this.uid,data:e},n,o)}),this.revokeMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.REVOKEMESSAGE,operationID:r,userID:this.uid,data:e},n,o)}),this.deleteMessageFromLocalStorage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.DELETEMESSAGEFROMLOCALSTORAGE,operationID:r,userID:this.uid,data:e},n,o)}),this.markSingleMessageHasRead=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.MARKSINGLEMESSAGEHASREAD,operationID:r,userID:this.uid,data:e},n,o)}),this.markGroupMessageHasRead=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.MARKGROUPMESSAGEHASREAD,operationID:r,userID:this.uid,data:e},n,o)}),this.insertSingleMessageToLocalStorage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.INSERTSINGLEMESSAGETOLOCALSTORAGE,operationID:r,userID:this.uid,data:e},n,o)}),this.insertGroupMessageToLocalStorage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.INSERTGROUPMESSAGETOLOCALSTORAGE,operationID:r,userID:this.uid,data:e},n,o)}),this.typingStatusUpdate=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.TYPINGSTATUSUPDATE,operationID:r,userID:this.uid,data:e},n,o)}),this.markC2CMessageAsRead=(e,t)=>new Promise((n,o)=>{let r=e;r.msgIDList=JSON.stringify(r.msgIDList);const a=t||i(this.uid);this.wsSend({reqFuncName:s.MARKC2CMESSAGEASREAD,operationID:a,userID:this.uid,data:r},n,o)}),this.clearC2CHistoryMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.CLEARC2CHISTORYMESSAGE,operationID:r,userID:this.uid,data:e},n,o)}),this.clearGroupHistoryMessage=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.CLEARGROUPHISTORYMESSAGE,operationID:r,userID:this.uid,data:e},n,o)}),this.getAllConversationList=e=>new Promise((t,n)=>{const o=e||i(this.uid);this.wsSend({reqFuncName:s.GETALLCONVERSATIONLIST,operationID:o,userID:this.uid,data:""},t,n)}),this.getConversationListSplit=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.GETCONVERSATIONLISTSPLIT,operationID:r,userID:this.uid,data:e},n,o)}),this.getOneConversation=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.GETONECONVERSATION,operationID:r,userID:this.uid,data:e},n,o)}),this.getConversationIDBySessionType=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.GETCONVERSATIONIDBYSESSIONTYPE,operationID:r,userID:this.uid,data:e},n,o)}),this.getMultipleConversation=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.GETMULTIPLECONVERSATION,operationID:r,userID:this.uid,data:e},n,o)}),this.deleteConversation=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.DELETECONVERSATION,operationID:r,userID:this.uid,data:e},n,o)}),this.setConversationDraft=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.SETCONVERSATIONDRAFT,operationID:r,userID:this.uid,data:e},n,o)}),this.pinConversation=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.PINCONVERSATION,operationID:r,userID:this.uid,data:e},n,o)}),this.getTotalUnreadMsgCount=e=>new Promise((t,n)=>{const o=e||i(this.uid);this.wsSend({reqFuncName:s.GETTOTALUNREADMSGCOUNT,operationID:o,userID:this.uid,data:""},t,n)}),this.getConversationRecvMessageOpt=(e,t)=>new Promise((e,n)=>{const o=t||i(this.uid);this.wsSend({reqFuncName:s.GETCONVERSATIONRECVMESSAGEOPT,operationID:o,userID:this.uid,data:""},e,n)}),this.setConversationRecvMessageOpt=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid),a=e;a.conversationIDList=JSON.stringify(e.conversationIDList),this.wsSend({reqFuncName:s.SETCONVERSATIONRECVMESSAGEOPT,operationID:r,userID:this.uid,data:a},n,o)}),this.searchLocalMessages=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.SEARCHLOCALMESSAGES,operationID:r,userID:this.uid,data:e},n,o)}),this.addFriend=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.ADDFRIEND,operationID:r,userID:this.uid,data:e},n,o)}),this.getDesignatedFriendsInfo=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.GETDESIGNATEDFRIENDSINFO,operationID:r,userID:this.uid,data:e},n,o)}),this.getRecvFriendApplicationList=e=>new Promise((t,n)=>{const o=e||i(this.uid);this.wsSend({reqFuncName:s.GETRECVFRIENDAPPLICATIONLIST,operationID:o,userID:this.uid,data:""},t,n)}),this.getSendFriendApplicationList=e=>new Promise((t,n)=>{const o=e||i(this.uid);this.wsSend({reqFuncName:s.GETSENDFRIENDAPPLICATIONLIST,operationID:o,userID:this.uid,data:""},t,n)}),this.getFriendList=e=>new Promise((t,n)=>{const o=e||i(this.uid);this.wsSend({reqFuncName:s.GETFRIENDLIST,operationID:o,userID:this.uid,data:""},t,n)}),this.setFriendRemark=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.SETFRIENDREMARK,operationID:r,userID:this.uid,data:e},n,o)}),this.checkFriend=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.CHECKFRIEND,operationID:r,userID:this.uid,data:e},n,o)}),this.acceptFriendApplication=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.ACCEPTFRIENDAPPLICATION,operationID:r,userID:this.uid,data:e},n,o)}),this.refuseFriendApplication=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.REFUSEFRIENDAPPLICATION,operationID:r,userID:this.uid,data:e},n,o)}),this.deleteFriend=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.DELETEFRIEND,operationID:r,userID:this.uid,data:e},n,o)}),this.addBlack=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.ADDBLACK,operationID:r,userID:this.uid,data:e},n,o)}),this.removeBlack=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.REMOVEBLACK,operationID:r,userID:this.uid,data:e},n,o)}),this.getBlackList=e=>new Promise((t,n)=>{const o=e||i(this.uid);this.wsSend({reqFuncName:s.GETBLACKLIST,operationID:o,userID:this.uid,data:""},t,n)}),this.inviteUserToGroup=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid),a=e;a.userIDList=JSON.stringify(a.userIDList),this.wsSend({reqFuncName:s.INVITEUSERTOGROUP,operationID:r,userID:this.uid,data:a},n,o)}),this.kickGroupMember=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid),a=e;a.userIDList=JSON.stringify(a.userIDList),this.wsSend({reqFuncName:s.KICKGROUPMEMBER,operationID:r,userID:this.uid,data:a},n,o)}),this.getGroupMembersInfo=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid),a=e;a.userIDList=JSON.stringify(a.userIDList),this.wsSend({reqFuncName:s.GETGROUPMEMBERSINFO,operationID:r,userID:this.uid,data:a},n,o)}),this.getGroupMemberList=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.GETGROUPMEMBERLIST,operationID:r,userID:this.uid,data:e},n,o)}),this.getJoinedGroupList=e=>new Promise((t,n)=>{const o=e||i(this.uid);this.wsSend({reqFuncName:s.GETJOINEDGROUPLIST,operationID:o,userID:this.uid,data:""},t,n)}),this.createGroup=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid),a=e;a.groupBaseInfo=JSON.stringify(a.groupBaseInfo),a.memberList=JSON.stringify(a.memberList),this.wsSend({reqFuncName:s.CREATEGROUP,operationID:r,userID:this.uid,data:a},n,o)}),this.setGroupInfo=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid),a=e;a.groupInfo=JSON.stringify(a.groupInfo),this.wsSend({reqFuncName:s.SETGROUPINFO,operationID:r,userID:this.uid,data:a},n,o)}),this.getGroupsInfo=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.GETGROUPSINFO,operationID:r,userID:this.uid,data:e},n,o)}),this.joinGroup=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.JOINGROUP,operationID:r,userID:this.uid,data:e},n,o)}),this.quitGroup=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.QUITGROUP,operationID:r,userID:this.uid,data:e},n,o)}),this.transferGroupOwner=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.TRANSFERGROUPOWNER,operationID:r,userID:this.uid,data:e},n,o)}),this.getSendGroupApplicationList=e=>new Promise((t,n)=>{const o=e||i(this.uid);this.wsSend({reqFuncName:s.GETSENDGROUPAPPLICATIONLIST,operationID:o,userID:this.uid,data:""},t,n)}),this.getRecvGroupApplicationList=e=>new Promise((t,n)=>{const o=e||i(this.uid);this.wsSend({reqFuncName:s.GETRECVGROUPAPPLICATIONLIST,operationID:o,userID:this.uid,data:""},t,n)}),this.acceptGroupApplication=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.ACCEPTGROUPAPPLICATION,operationID:r,userID:this.uid,data:e},n,o)}),this.refuseGroupApplication=(e,t)=>new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.REFUSEGROUPAPPLICATION,operationID:r,userID:this.uid,data:e},n,o)}),this.wsSend=(e,n,o)=>{void 0===this.ws&&o({event:e.reqFuncName,errCode:112,errMsg:"ws conect failed...",data:"",operationID:e.operationID||""}),"object"==typeof e.data&&(e.data=JSON.stringify(e.data));const r={oid:e.operationID||i(this.uid),mname:e.reqFuncName,mrsve:n,mrjet:o,flag:!1};this.ws2promise[r.oid]=r;const a=i=>{const n=JSON.parse(i.data);t[n.event.toUpperCase()]&&this.emit(n.event,n),e.reqFuncName===s.LOGOUT&&(this.logoutFlag=!0,this.ws.close(),this.ws=void 0);const o=this.ws2promise[n.operationID];o&&(0===n.errCode?o.mrsve(n):o.mrjet(n),delete this.ws2promise[n.operationID])};"web"==this.platform?(this.ws.send(JSON.stringify(e)),this.onceFlag&&(this.ws.onmessage=a,this.onceFlag=!1)):(this.ws.send({data:JSON.stringify(e),success:e=>{"uni"===this.platform&&void 0!==this.ws._callbacks&&void 0!==this.ws._callbacks.message&&(this.ws._callbacks.message=[])}}),this.onceFlag&&(this.ws.onMessage(a),this.onceFlag=!1)),e.reqFuncName===s.LOGOUT&&(this.onceFlag=!0)},this.getPlatform()}login(e){return new Promise((t,i)=>{const{userID:n,token:o,url:r,platformID:a,operationID:E}=e;this.wsUrl=`${r}?sendID=${n}&token=${o}&platformID=${a}`;const d={userID:n,token:o};let u={event:s.LOGIN,errCode:0,errMsg:"",data:"",operationID:E||""};this.createWs(()=>{this.uid=n,this.token=o,this.iLogin(d,E).then(e=>{this.logoutFlag=!1,t(e)}).catch(e=>{u.errCode=e.errCode,u.errMsg=e.errMsg,i(u)})},()=>{},e=>{console.log(e),u.errCode=111,u.errMsg="ws connect failed...",this.logoutFlag||this.reconnect(),i(u)}),this.ws||(u.errCode=112,u.errMsg="The current platform is not supported...",i(u))})}iLogin(e,t){return new Promise((n,o)=>{const r=t||i(this.uid);this.wsSend({reqFuncName:s.LOGIN,operationID:r,userID:this.uid,data:e},n,o)})}logout(e){return new Promise((t,n)=>{const o=e||i(this.uid);this.wsSend({reqFuncName:s.LOGOUT,operationID:o,userID:this.uid,data:""},t,n)})}getPlatform(){const e=typeof WebSocket,s=typeof uni,t=typeof wx;this.platform="undefined"===e?"object"===s&&"object"!==t?"uni":"object"!==s&&"object"===t?"wx":"unknow":"web"}createWs(e,s,t){let i=()=>{this.iLogin({userID:this.uid,token:this.token}).then(e=>this.logoutFlag=!1)};e&&(i=e);let n=()=>{console.log("ws close agin:::"),this.logoutFlag||this.reconnect()};s&&(n=s);let o=()=>{};if(t&&(o=t),"web"===this.platform)return this.ws=new WebSocket(this.wsUrl),this.ws.onclose=n,this.ws.onopen=i,void(this.ws.onerror=o);const r="uni"===this.platform?uni:wx;this.ws=r.connectSocket({url:this.wsUrl,complete:()=>{}}),this.ws.onClose(n),this.ws.onOpen(i),this.ws.onError(o)}reconnect(){this.lock||(this.lock=!0,setTimeout(()=>{this.createWs(),this.lock=!1},2e3))}}export{t as CbEvents,n as OpenIMSDK,s as RequestFunc,e as emitter,i as uuid};
//# sourceMappingURL=index.modern.js.map
